{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,SACnCC,EAAcF,SAASC,cAAc,UAC3CE,QAAQC,IAAIF,GAEZH,EAAUM,iBAAiB,SAM3B,SAAmBC,GACjBC,EAASD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,K,IANrCR,EAAYG,iBAAiB,SAU7B,SAAqBC,GACnBA,EAAEK,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACrCT,QAAQC,IAAIQ,E,IAVZ,MAAML,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formDelay = document.querySelector(\".form\")\nconst buttonDelay = document.querySelector(\"button\")\nconsole.log(buttonDelay);\n\nformDelay.addEventListener(\"input\", formDates);\nbuttonDelay.addEventListener(\"click\", formDelays)\nlet startCreatePromise = null;\n\nconst formDate = {}\n\nfunction formDates(e) {\n  formDate[e.target.name] = e.target.value\n}\n\n\nfunction formDelays (e) {\n  e.preventDefault();\nfor (let i = 0; i < formDate.amount; i++) {\nconsole.log(i);\n \n\n}\n\n\n\n}\n\n\n// function createPromise(position, delay) {\n \n//   const shouldResolve = Math.random() > 0.3;\n//  const p = new Promise(res, rej)\n\n//   if (shouldResolve) {\n//     res(position, delay.delay)\n \n\n//   } else {\n//     rej(position, delay.delay)\n\n//   } return createPromise\n  \n// }\n\n\n"],"names":["parcelRequire","$47d4ff9957288465$var$formDelay","document","querySelector","$47d4ff9957288465$var$buttonDelay","console","log","addEventListener","e","$47d4ff9957288465$var$formDate","target","name","value","preventDefault","i","amount"],"version":3,"file":"03-promises.d0731c04.js.map"}