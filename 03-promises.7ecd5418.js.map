{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,SACnCC,EAAcF,SAASC,cAAc,UAC3CE,QAAQC,IAAIF,GAEZH,EAAUM,iBAAiB,SAM3B,SAAmBC,GACjBC,EAASD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,K,IANrCR,EAAYG,iBAAiB,SAU7B,SAAqBC,GACnBA,EAAEK,iBACDC,EAAOC,OAAON,EAASO,OAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAON,EAASS,QAAQ,EAAGD,IAChDZ,QAAQC,IAAIQ,GACVK,YAAW,KACPC,EAAcL,OAAOE,GAAIH,GACxBO,MAAK,EAAEC,SAACA,EAAQN,MAAEA,MACfX,QAAQC,IAAI,uBAAqBgB,QAAiBN,QAClDO,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAqBH,QAAiBN,OAAW,IAE1EU,OAAM,EAACJ,SAAEA,EAAQN,MAAEA,MAClBX,QAAQC,IAAI,sBAAoBgB,QAAiBN,QACjDO,EAAAxB,GAASyB,OAAOG,QAAQ,sBAAoBL,QAAeN,OAAW,GACtE,GACLF,GAEHA,GAAOC,OAAON,EAASmB,K,IA1B3B,MAAMnB,EAAW,GAMjB,IAAIK,EAAO,EA0BX,SAASM,EAAcE,EAAUN,GAC7B,MAAMa,EAAgBC,KAAKC,SAAW,GAU1C,OARoB,IAAIC,SAAQ,CAACC,EAAIC,KAC7BL,EACFI,EAAI,C,SAACX,E,MAASN,IAEfkB,EAAI,C,SAACZ,E,MAASN,GAAO,G","sources":["src/js/03-promise.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formDelay = document.querySelector(\".form\")\nconst buttonDelay = document.querySelector(\"button\")\nconsole.log(buttonDelay);\n\nformDelay.addEventListener(\"input\", formDates);\nbuttonDelay.addEventListener(\"click\", formDelays)\n\nconst formDate = {}\n\n\nfunction formDates(e) {\n  formDate[e.target.name] = e.target.value\n}\nlet step = 0;\n\nfunction formDelays (e) {\n  e.preventDefault();\n   step = Number(formDate.delay)\n\n   for (let i = 1; i < Number(formDate.amount)+1; i++) {\n  console.log(step);\n    setTimeout(()=>{\n        createPromise(Number(i), step)\n        .then(( {position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n          });\n    }, step)\n    \n    step+= Number(formDate.step)\n\n   }\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((res,rej) => {\n    if (shouldResolve) {\n      res({position,delay})\n    } else {\n     rej({position,delay})\n    }\n    \n      })\nreturn promise\n}\n\n"],"names":["$eWCmQ","parcelRequire","$fa731149d7840060$var$formDelay","document","querySelector","$fa731149d7840060$var$buttonDelay","console","log","addEventListener","e","$fa731149d7840060$var$formDate","target","name","value","preventDefault","$fa731149d7840060$var$step","Number","delay","i","amount","setTimeout","$fa731149d7840060$var$createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","step","shouldResolve","Math","random","Promise","res","rej"],"version":3,"file":"03-promises.7ecd5418.js.map"}