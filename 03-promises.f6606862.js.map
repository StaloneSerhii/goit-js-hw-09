{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SAiCzC,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzCTL,EAAUY,iBAAiB,UAG3B,SAAqBC,GACjB,IAEqBC,EAAfD,EAAEE,cADJC,SAAYC,EAAKH,EAALT,MAAOa,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3BC,WAAaC,OAAOJ,EAAMK,OAC1BC,UAAYF,OAAOH,EAAKI,OACxBE,YAAcH,OAAOF,EAAOG,OAGhCT,EAAEY,iBAED,IAAK,IAAIC,EAAI,EAAGA,GAAKF,YAAaE,IAE7BvB,EAAcuB,EAAGN,YAChBO,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACfwB,QAAQC,IAAI,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,QAC1D2B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCH,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,O,IAEvE8B,OAAM,SAAAP,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,QAAQC,IAAI,sBAAuCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,QACzD2B,EAAAlC,GAASmC,OAAOG,QAAQ,sBAAqCL,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,O,IAErEe,YAAcG,UAGrBvB,EAAUqC,O,IAebR,QAAQC,IAAI,K","sources":["src/js/03-promis.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formDelay = document.querySelector(\".form\")\nformDelay.addEventListener(\"submit\", formDelays)\n\n\nfunction formDelays (e) {\n    const {\n        elements: { delay, step, amount },\n      } = e.currentTarget;\n    \n      delayValue = Number(delay.value);\n      stepValue = Number(step.value);\n      amountValue = Number(amount.value);\n    \n  \n  e.preventDefault();\n\n   for (let i = 1; i <= amountValue; i++) {\n\n        createPromise(i, delayValue)\n        .then(( {position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n          });\n          delayValue += stepValue;\n\n   }\n   formDelay.reset();\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\nconsole.log(\"fs\");"],"names":["$iU1Pc","parcelRequire","$09946ee198c53588$var$formDelay","document","querySelector","$09946ee198c53588$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","preventDefault","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f6606862.js.map"}