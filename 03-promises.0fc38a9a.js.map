{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SACnCC,EAAcF,SAASC,cAAc,UAC3CE,QAAQC,IAAIF,GAEZH,EAAUM,iBAAiB,SAM3B,SAAmBC,GACjBC,EAASD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,K,IANrCR,EAAYG,iBAAiB,SAU7B,SAAqBC,G,kBAKnBH,QAAQC,IAAIO,GACVC,YAAW,WAkBf,IAAuBC,EAAUC,EACvBC,GADaF,EAjBDG,OAAOC,GAiBIH,EAjBAH,EAkBvBI,EAAgBG,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAAIC,GAC7BP,EACFM,EAAI,CAACR,WAASC,UAEfQ,EAAI,CAACT,WAASC,S,KAvBVS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACfX,QAAQC,IAAI,uBAAwCqB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QAC1DY,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCH,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,IAEvEe,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBX,QAAQC,IAAI,sBAAuCqB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,QACzDY,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAqCL,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,MAExEH,GAEHA,GAAOK,OAAOT,EAASwB,K,EAjBzBzB,EAAE0B,iBACDrB,EAAOK,OAAOT,EAASO,OAEvB,IAAK,IAAImB,EAAI,EAAGA,EAAIjB,OAAOT,EAAS2B,QAAQ,EAAGD,IAAGE,EAAAF,E,IAZrD,IAAM1B,EAAW,GAMjB,IAAII,EAAO,C","sources":["src/js/03-promise.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formDelay = document.querySelector(\".form\")\nconst buttonDelay = document.querySelector(\"button\")\nconsole.log(buttonDelay);\n\nformDelay.addEventListener(\"input\", formDates);\nbuttonDelay.addEventListener(\"click\", formDelays)\n\nconst formDate = {}\n\n\nfunction formDates(e) {\n  formDate[e.target.name] = e.target.value\n}\nlet step = 0;\n\nfunction formDelays (e) {\n  e.preventDefault();\n   step = Number(formDate.delay)\n\n   for (let i = 1; i < Number(formDate.amount)+1; i++) {\n  console.log(step);\n    setTimeout(()=>{\n        createPromise(Number(i), step)\n        .then(( {position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n          });\n    }, step)\n    \n    step+= Number(formDate.step)\n\n   }\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((res,rej) => {\n    if (shouldResolve) {\n      res({position,delay})\n    } else {\n     rej({position,delay})\n    }\n    \n      })\nreturn promise\n}\n\n"],"names":["$iU1Pc","parcelRequire","$6b6c8d7ec641984c$var$formDelay","document","querySelector","$6b6c8d7ec641984c$var$buttonDelay","console","log","addEventListener","e","$6b6c8d7ec641984c$var$formDate","target","name","value","$6b6c8d7ec641984c$var$step","setTimeout","position","delay","shouldResolve","Number","i","Math","random","Promise","res","rej","then","param","concat","$parcel$interopDefault","Notify","success","catch","failure","step","preventDefault","i1","amount","_loop"],"version":3,"file":"03-promises.0fc38a9a.js.map"}